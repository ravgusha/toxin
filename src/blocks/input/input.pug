mixin input(props)
  //- Принимает:
  //-   props {
  //-     title: ''         {string} - текст с названием (выводится над полем)
  //-     mods: ''          {string} - модификаторы блока
  //-     helpText: ''      {string} - пояснение над полем
  //-     checkboxLabel: '' {string} - описание чек-бокса 
  //-     isChecked: ''     {boolean}- отмечен ли чек-бокс
  //-     icon: ''          {string} - иконка 
  //-     val: ''           {string} - текст в поле
  //-     attrs:            {object} - любые атрибуты для input/textarea
  //-       type:           {string}
  //-       placeholder:    {string}
  -
    if(typeof(props) === 'undefined') {
      let props = {};
    }
    let allMods = '';
    if(typeof(props.mods) !== 'undefined' && props.mods) {
      let modsList = props.mods.split(',');
      for (let i = 0; i < modsList.length; i++) {
        allMods = allMods + ' input_' + modsList[i].trim();
      }
    }
  form.input(class=allMods)&attributes(attributes)
    .input__header
      if (typeof(props.title) !== 'undefined' && props.title)
        span.text-header-3.input__name!= props.title
      if (typeof(props.helpText) !== 'undefined' && props.helpText)
        span.input__help-text!= props.helpText
    .input__wrap
      input.input__control(
        type=typeof props.attrs !== "undefined" && props.attrs.type ? props.attrs.type : "text",
        value=props.val,
        checked=props.isChecked
      )&attributes(props.attrs)
      if (props.attrs.type === 'checkbox' | props.attrs.type === 'radio')
        label.text-body(for=`${props.attrs.id}`)= props.checkboxLabel
      if (typeof(props.icon) !== 'undefined' && props.icon)
        span.material-icons.input__icon= props.icon

      block
